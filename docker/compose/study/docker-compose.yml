version: '3' -> 파일 규격 버전

volumes:                                                        -> 도커가 관리하는 가상의 디스크를 django_sample_db_dev로 만든다.
  django_sample_db_dev: {}                                      -> 여기서 만든 디스크는 docker volume ls로 확인할 수 있다.

services:                       -> 실행하려는 컨테이너들을 정의한다, 컴포즈에서는 컨테이너 대신 서비스라는 개념을 사용한다.
  db:                                                           -> postgres이미지의 컨테이너 이름을 db로 지정
    image: postgres                                             -> 사용할 이미지 지정
    volumes:                                                    -> docker --volume옵션과 동일
      - django_sample_db_dev:/var/lib/postgresql/data
    environment:                                                -> 환경변수를 지정. docker -e옵션과 동일
      - POSTGRES_DB=sampledb
      - POSTGRES_USER=sampleuser
      - POSTGRES_PASSWORD=samplesecret
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8

  django:
    build:                                                      
      context: .                                                -> 이미지 대신 docker build 명령을 실행할 디렉터리 경로이다.
      dockerfile: ./compose/django/Dockerfile-dev               -> 개발용 도커 이미지를 빌드하는데 사용할 Dockerfile을 지정한다.
    environment:
      - DJANGO_DEBUG=True
      - DJANGO_DB_HOST=db
      - DJANGO_DB_PORT=5432
      - DJANGO_DB_NAME=sampledb
      - DJANGO_DB_USERNAME=sampleuser
      - DJANGO_DB_PASSWORD=samplesecret
      - DJANGO_SECRET_KEY=dev_secret_key
    ports:                                                      -> docker run -p에 해당하는 부분, 포트매핑
      - "8000:8000"
    command:                                                    -> docker run으로 컨테이너를 실행할때 가장 마지막에 적었던 명령어
      - bash
      - -c
      - |
        python manage.py migrate
        python manage.py runserver 0:8000
    restart: always
    volumes:                                                     -> 볼륨 마운트
      - ./:/app/
